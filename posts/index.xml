<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 日々のメモ書き</title>
    <link>https://0ta2.github.io/gh-page/posts/</link>
    <description>Recent content in Posts on 日々のメモ書き</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="https://0ta2.github.io/gh-page/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>esa.io で静的サイトを公開してみたときの手順公開！手を動かしながらやれば､同じよにできるよ！</title>
      <link>https://0ta2.github.io/gh-page/posts/9.html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://0ta2.github.io/gh-page/posts/9.html/</guid>
      <description>

&lt;h1 id=&#34;概要&#34;&gt;概要&lt;/h1&gt;

&lt;p&gt;esa.io を使って､静的サイトジェネレータである､Hugoを使って公開してみたので､手順にまとめてみました 😄
Hugo のインストール自体は､公式に書いてあった､&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;Quick Start&lt;/a&gt;を見ながらやれば大丈夫！&lt;/p&gt;

&lt;h2 id=&#34;全体の流&#34;&gt;全体の流&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Hugo のインストール&lt;/li&gt;
&lt;li&gt;記事作成用のリポジトリ作成&lt;/li&gt;
&lt;li&gt;記事公開用のリポジトリ作成&lt;/li&gt;
&lt;li&gt;CircleCIと記事作成用リポジトリとの連携&lt;/li&gt;
&lt;li&gt;GitHub Page の設定&lt;/li&gt;
&lt;li&gt;esa.io との連携&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;用意するもの&#34;&gt;用意するもの&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;brew がインストールされてるMac&lt;/li&gt;
&lt;li&gt;GitHubのアカウント

&lt;ul&gt;
&lt;li&gt;記事作成用のリポジトリ&lt;/li&gt;
&lt;li&gt;GitHub Page用のリポジトリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CircleCIのアカウント&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hugo-のインストール&#34;&gt;Hugo のインストール&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;brew&lt;/code&gt; を使えばあっという間にインストールできます｡&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とりあえず､バージョンを確認してみる&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ hugo version
Hugo Static Site Generator v0.58.3/extended darwin/amd64 BuildDate: unknown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新規サイトの作成
&lt;code&gt;esa-0ta2-blog&lt;/code&gt; が作りたいサイト名になるので適宜変えてもらえればOKです｡&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ hugo new site esa-0ta2-blog
Congratulations! Your new Hugo site is created in /Users/0ta2/.ghq/github.com/0ta2/esa-0ta2-blog.

Just a few more steps and you&#39;re ready to go:

1. Download a theme into the same-named folder.
   Choose a theme from https://themes.gohugo.io/ or
   create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.
2. Perhaps you want to add some content. You can add single files
   with &amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;.
3. Start the built-in live server via &amp;quot;hugo server&amp;quot;.

Visit https://gohugo.io/ for quickstart guide and full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;記事作成用のリポジトリ作成&#34;&gt;記事作成用のリポジトリ作成&lt;/h4&gt;

&lt;p&gt;GitHub に記事公開用のプライベートリポジトリを作成しておいてください｡&lt;/p&gt;

&lt;h4 id=&#34;記事作成用リポジトリにcommit-push&#34;&gt;記事作成用リポジトリにCommit &amp;amp; Push&lt;/h4&gt;

&lt;p&gt;配下に作成したサイト名でフォルダができるので､移動して
&lt;code&gt;git init&lt;/code&gt; を実行すればOK!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ cd esa-0ta2-blog/

❯ pwd
/Users/0ta2/.ghq/github.com/0ta2/esa-0ta2-blog

❯ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;テーマの適用&#34;&gt;テーマの適用&lt;/h4&gt;

&lt;p&gt;テーマは､下記から探すことができます｡&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今回は､ &lt;code&gt;zen&lt;/code&gt; というシンプルなやつにしました!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ git submodule add https://github.com/frjo/hugo-theme-zen.git themes/zen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;config.toml&lt;/code&gt; に &lt;code&gt;zen&lt;/code&gt; を設定すれば､テーマの指定ができます｡&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ echo &#39;theme = &amp;quot;zen&amp;quot;&#39; &amp;gt;&amp;gt; config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;試しに記事を作成してみる&#34;&gt;試しに記事を作成してみる&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ hugo new posts/my-first-post.md
/Users/0ta2/.ghq/github.com/0ta2/esa-0ta2-blog/content/posts/my-first-post.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ cat content/posts/my-first-post.md
---
title: &amp;quot;My First Post&amp;quot;
date: 2019-10-05T12:07:42+09:00
draft: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ローカルで-hugo-を起動&#34;&gt;ローカルで hugo を起動&lt;/h4&gt;

&lt;p&gt;サイトへのアクセスが､下記のURLと表示されてるので､アクセスすればシンプルな､ &lt;code&gt;zen&lt;/code&gt; のテーマのサイトが見れるはずです｡&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;❯ hugo server -D
Building sites … WARN 2019/10/01 00:09:49 .File.UniqueID on zero object. Wrap it in if or with: {{ with .File }}{{ .UniqueID }}{{ end }}

                   | EN
+------------------+----+
  Pages            |  6
  Paginator pages  |  0
  Non-page files   |  0
  Static files     |  7
  Processed images |  0
  Aliases          |  2
  Sitemaps         |  1
  Cleaned          |  0

Total in 203 ms
Watching for changes in /Users/0ta2/.ghq/github.com/0ta2/esa-0ta2-blog/{archetypes,content,data,layouts,static,themes}
Watching for config changes in /Users/0ta2/.ghq/github.com/0ta2/esa-0ta2-blog/config.toml
Environment: &amp;quot;development&amp;quot;
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;終了したいときは､&lt;code&gt;Ctrl + c&lt;/code&gt; で終了できます｡&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;カスタマイズ&#34;&gt;カスタマイズ&lt;/h4&gt;

&lt;p&gt;下記の項目を修正すれば､タイトル等を変更することができます｡
&lt;strong&gt;canonifyURLs&lt;/strong&gt; を有効にしないと､GitHub Page で表示できないので､必ず &lt;code&gt;true&lt;/code&gt; にしましょう！&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ cat config.toml
baseURL = &amp;quot;https://0ta2.github.io/gh-page/&amp;quot;
languageCode = &amp;quot;ja-jp&amp;quot;
canonifyURLs = true # 相対パスじゃなくて､baseURLを起点にする｡
enableEmoji = true  # 絵文字サポートを有効にする
title = &amp;quot;日々のメモ書き&amp;quot;
theme = &amp;quot;zen&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/f6b03d23-028c-4a37-a13e-27bc49687912.png&#34; alt=&#34;スクリーンショット 2019-10-05 12.10.25.png (36.7 kB)&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;静的サイトを生成&#34;&gt;静的サイトを生成&lt;/h4&gt;

&lt;p&gt;静的サイトを生成するには､ただ単純に &lt;code&gt;hugo&lt;/code&gt; とするだけで生成される｡&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ hugo
Building sites … WARN 2019/10/05 12:11:42 .File.UniqueID on zero object. Wrap it in if or with: {{ with .File }}{{ .UniqueID }}{{ end }}

                   | EN
+------------------+----+
  Pages            |  6
  Paginator pages  |  0
  Non-page files   |  0
  Static files     |  7
  Processed images |  0
  Aliases          |  2
  Sitemaps         |  1
  Cleaned          |  0

Total in 403 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;記事作成用のリポジトリ作成-1&#34;&gt;記事作成用のリポジトリ作成&lt;/h3&gt;

&lt;p&gt;一旦､今までの状況をpushしておく&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; で不要なものを除外するようにする｡&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ cat .gitignore
# Hugo
/public

# Mac
.DS_Store
❯ git add .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;git status&lt;/code&gt; でみると除外されてる｡&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ git status
❯ git add .
❯ git cm -m &amp;quot;first commit&amp;quot;
❯ git remote add origin git@github.com:0ta2/esa-0ta2-blog.git
❯ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;記事公開用のリポジトリ作成&#34;&gt;記事公開用のリポジトリ作成&lt;/h3&gt;

&lt;p&gt;公開用のリポジトリを作成しておきます｡
公開用になるので､パブリックリポジトリにしておきましょう！&lt;/p&gt;

&lt;h3 id=&#34;circleciと記事作成用リポジトリとの連携&#34;&gt;CircleCIと記事作成用リポジトリとの連携&lt;/h3&gt;

&lt;p&gt;CircleCI にログインして､&lt;code&gt;ADD PROJECTS&lt;/code&gt; から公開用になるページのリポジトリを､&lt;code&gt;Set Up Project&lt;/code&gt;の設定をしていきます！&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-05 23.16.34.png (245.1 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/9a546255-e90d-4e32-bd23-7d2b4bb64bfb.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;とりあえず､&lt;code&gt;Linux&lt;/code&gt; であればOK！&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-05 23.20.20.png (249.7 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/caf7b614-6670-40d9-a611-fb67c6d32ca8.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;下の方に､サンプルの yml があるので､一旦そちらを使ってみる！&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-05 23.22.39.png (240.2 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/5269c2bd-ab5b-4c27-9e7a-5c6f48c1876e.png&#34;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ vim .circleci/config.yml
❯ git add .circleci/
❯ git commit -m &amp;quot;Add Circleci yml&amp;quot;
❯ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Push ができたら､画像にある &lt;code&gt;Start building&lt;/code&gt; でbuild開始と思ったら､
すでにPushを検知して､buildが走ってる 😅&lt;/p&gt;

&lt;p&gt;ここから､少しややこしいけど､ ssh 鍵の設定をやっていく｡
CircelCI自体はデプロイの権限しかないから､ssh鍵登録して､Pushできるようにしてあげる設定をする｡&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SETTINGS&lt;/code&gt; の歯車マークから設定画面を開く&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-05 23.29.21.png (224.1 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/de0797e7-eb7c-46e9-b94a-1dec377bf12a.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SSH Permissions&lt;/code&gt; から鍵登録する｡&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-05 23.32.15.png (248.4 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/0f89f4bc-4592-4a05-9074-15f12f0024e6.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hostname&lt;/code&gt; と &lt;code&gt;Private Key&lt;/code&gt; を登録します｡
&lt;code&gt;Hostname&lt;/code&gt; のは､鍵に関連付けるホスト名を入力する必要があるそうです｡
なので､今回は &lt;code&gt;github.com&lt;/code&gt; にしています｡
&lt;code&gt;Private Key&lt;/code&gt; は､GitHubに登録している､鍵を使います｡
ただ､OpenSSHのデフォルトフォーマットはサポートしていないとのこと 😱&lt;/p&gt;

&lt;p&gt;なので､適宜 pem に変換してね！&lt;/p&gt;

&lt;p&gt;登録できたら､&lt;code&gt;Fingerprint&lt;/code&gt;を確認できるので､メモっておきます｡&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-06 0.01.45.png (258.3 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/06/14273/a4945aec-b347-4c53-8fd1-4aea20ae5f99.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;Pem に変換したら登録すれば､CircelCIでやっとPushできるようになります｡&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-05 23.39.14.png (269.3 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/26e3176f-b0dd-4505-b747-cc1675e6fb6f.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;メモった､&lt;code&gt;Fingerprint&lt;/code&gt;を下記のconfに記載したら､&lt;code&gt;git push&lt;/code&gt;しちゃいましょう！&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ mkdir .circleci
❯ touch .circleci/config.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;details&gt;&lt;summary&gt;config.yml&lt;/summary&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-.circleci/config.yml&#34;&gt;---
version: 2

defaults: &amp;amp;defaults
  working_directory: ~/repo
  docker:
    - image: cibuilds/hugo:0.58
      environment:
        TZ: &amp;quot;Asia/Tokyo&amp;quot;

jobs:
  build:
    &amp;lt;&amp;lt;: *defaults
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --recursive

      - add_ssh_keys:
          fingerprints:
            - &amp;quot;64:73:27:82:6b:dc:99:e1:a8:bc:e4:67:8e:a3:20:f8&amp;quot;

      - run:
          name: Git Add config
          command: |
            git config --global user.name &amp;quot;CircleCI&amp;quot;
            git config --global user.email &amp;quot;circleci@example.com&amp;quot;

      - run:
          name: Git Commit &amp;amp; Push
          command: |
            git clone git@github.com:0ta2/gh-page.git public
            hugo
            cd public
            git add .
            git commit -m &amp;quot;[ci skip] publish&amp;quot;
            git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ git add .circleci/config.yml
❯ git commit -m &amp;quot;Modify CircleCI yml&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;github-page-の設定&#34;&gt;GitHub Page の設定&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;記事公開用&lt;/code&gt; のリポジトリで設定していきます｡&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Settings&lt;/code&gt; を選択して､下の方に設定項目があるので､移動します｡
&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-06 11.19.34.png (288.3 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/06/14273/3b8cb7b1-7ca6-41c4-9b35-c2ff89eedab0.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GitHug Page&lt;/code&gt; の設定項目があるので､ &lt;code&gt;None&lt;/code&gt; を &lt;code&gt;master branch&lt;/code&gt;  に変更します｡&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;1279&#34; alt=&#34;スクリーンショット 2019-10-06 11.19.46.png (292.3 kB)&#34; src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/06/14273/940561b1-004c-4df1-bf0d-78699ad74d6b.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;これで､記事作成用のGitHubと記事公開用の連携ができたので､今度は&lt;code&gt;esa.io&lt;/code&gt;と連携していきましょう！&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SETTINGS&lt;/code&gt; から設定する｡&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/7f548bdc-ed7d-4e09-8dcd-42017ff2d3f4.png&#34; alt=&#34;スクリーンショット 2019-10-05 12.14.22.png (123.3 kB)&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Webhook・アプリ連携&lt;/code&gt; から&lt;code&gt;GitHub&lt;/code&gt; との連携設定をしていきます｡
&lt;code&gt;Webhook・アプリ連携&lt;/code&gt; を選択すると､&lt;code&gt;Add webhooks&lt;/code&gt;のボタンが出てくるので､それを選択して進めていきます｡&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/fea1c2aa-9765-49c6-bdb4-7f56722851c3.png&#34; alt=&#34;スクリーンショット 2019-10-05 12.27.06.png (70.5 kB)&#34; /&gt;&lt;/p&gt;

&lt;p&gt;いろんなものと連携できるようになっています｡
今回は､&lt;code&gt;GitHub(β)&lt;/code&gt; で連携します｡
まだ､β版なので本リリースが待ち遠しいっす!&lt;/p&gt;

&lt;p&gt;参考: &lt;a href=&#34;https://docs.esa.io/posts/176&#34;&gt;GitHub Webhook (β) で GitHubのリポジトリに md ファイルを push できるようになりました&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/f3eb51d3-5701-4523-8b6e-1f6a7d92759f.png&#34; alt=&#34;スクリーンショット 2019-10-05 12.18.42.png (68.0 kB)&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GitHub(β)&lt;/code&gt; には､下記のように入力します｡&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ラベル名&lt;/th&gt;
&lt;th&gt;入力値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Label (Optional)&lt;/td&gt;
&lt;td&gt;任意の名前&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;esa root category&lt;/td&gt;
&lt;td&gt;esaのカテゴリ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;repo&lt;/td&gt;
&lt;td&gt;GitHubのリポジトリ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;branch&lt;/td&gt;
&lt;td&gt;ブランチ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;output directory&lt;/td&gt;
&lt;td&gt;mdファイルのディレクトリを指定&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;API Access Token&lt;/td&gt;
&lt;td&gt;GitHubから取得したAPI Token&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;GitHub API は､&lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;ここ&lt;/a&gt;から取得できるよ&lt;/p&gt;

&lt;p&gt;実際に入力するとこんな感じ&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/e5a5659f-5f6d-4acc-b629-8fb14ce1163f.png&#34; alt=&#34;スクリーンショット 2019-10-05 12.23.22.png (41.4 kB)&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これで､&lt;code&gt;Ship It!&lt;/code&gt; での更新のタイミングでmdファイルが､GitHubにpushされるようになります!&lt;/p&gt;

&lt;p&gt;動くかどうか､試してみましょう!&lt;/p&gt;

&lt;p&gt;確かに新しく記事が追加されてのが確認できました!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ git pull origin master
remote: Enumerating objects: 8, done.
remote: Counting objects: 100% (8/8), done.
remote: Compressing objects: 100% (4/4), done.
Unpacking objects: 100% (5/5), done.
remote: Total 5 (delta 1), reused 0 (delta 0), pack-reused 0
From github.com:0ta2/esa-0ta2-blog
 * branch            master     -&amp;gt; FETCH_HEAD
   c2640e4..ffaba87  master     -&amp;gt; origin/master
Updating c2640e4..ffaba87
Fast-forward
 content/posts/12.html.md | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 content/posts/12.html.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;中身はこんな感じです&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ cat content/posts/12.html.md
---
title: &amp;quot;testだよ!&amp;quot;
category:
tags:
created_at: 2019-10-05 13:02:38 +0900
updated_at: 2019-10-05 13:02:38 +0900
published: true
number: 12
---

これはテストです!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;試しにローカルサーバで動かしてみると､､､&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-zsh&#34;&gt;❯ hugo server -D
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;できてる 😀&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://img.esa.io/uploads/production/attachments/13530/2019/10/05/14273/904e1e74-1bdb-4e83-979b-b184695f6f5f.png&#34; alt=&#34;スクリーンショット 2019-10-05 13.05.28.png (41.5 kB)&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;所感&#34;&gt;所感&lt;/h2&gt;

&lt;p&gt;CircleCIからPushさせるのは始めただったので少し躓いたりしましたが､無事公開できました！ 😁
これで､お手軽に記事をどんどん公開できる！ 😎&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
